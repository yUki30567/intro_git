
▼学習メモ

▼初期設定
------------------------------------------------------------
git config --global user.name "●ユーザーネーム●"
git config --global user.email ●登録済みのメールアドレス●
git config --global core.editor "[code|atom] --wait" 

設定内容の確認コマンド
git congig user.name ※登録したユーザーネームの表示
git congig user.email ※登録したemailアドレスの表示
git config --list 設定内容を全て表示
------------------------------------------------------------

▼linuxコマンド
------------------------------------------------------------
cd ●遷移したいディレクトリ●
mkdir ●作成するファイル名 or ディレクトリ●
mv ●移動元(変更対象)● ●移動後(変更後の名称)●
rm ●削除対象のファイルパス●
ls ●カレントディレクトリのファイル・フォルダ一覧● ※-aをつけると隠しファイルも表示
cat ●表示したいファイルのパス● → ファイルの内容を表示するlinuxコマンド
------------------------------------------------------------


2023/10/13 Git Lesson 1
---------------------------------------------------------------------------------------

git init → ローカルリポジトリの新規作成

対象ファイルが格納されているフォルダへcdで移動
git statusでファイルの変更状態を確認

ステージングエリア(git add)　→ ローカルリポジトリ(commit)　→ リモートリポジトリ(push)

・ステージングエリア　※控室
・ローカルリポジトリ　※端末内のGitリポジトリ
・リモートリポジトリ　※GitHubリポジトリ

「git commit -v」で変更内容を確認しながらコミットできる
この時にコミットメッセージをVIMエディターで記載する

---------------
1行目　変更内容
2行目　空行
3行目　変更理由
---------------

▼vimエディター操作方法
・insert(編集)モード:i
・内容を保温してVimエディターを閉じる:esc → :wq → enter

ファイル削除　→ git rm ●削除したいファイル名●
---------------------------------------------------------------------------------------



2023/10/16 Git Lesson 2
---------------------------------------------------------------------------------------
git diff → ローカルファイルとステージングエリア内の差分を比較するコマンド
git diff HEAD → ステージングエリアとローカルリポジトリ内の差分を比較するコマンド

git remote add origin ●GitHubのURL● → リモートリポジトリ(GitHub上)へ新しいファイルをpushする際に使用するコマンド　※既に存在する場合は不要
git reset ●ファイル名●　→ 削除したファイルの復元



▼ファイルのトラッキングから外す方法
1.'.gitignore'ファイルを作成　→ mkdir .gitignore | touch .gitignore && open .gitignore
2.作成した'.gitignore'の中に無視したいファイル名を記述
3.除外したいファイルをrm削除　→ git rm --cached ●管理から除外したいファイル名●
4.変更をadd → git add .
5.変更をpushする　→ git push origin [master|main]

---------------------------------------------------------------------------------------

Gitの練習をしていきます。
基本的なワークフローを学びます。

・git init → ローカルリポジトリの新規作成
・git add　→ ローカルファイルをステージングエリアへ追加
・git commit　→ ステージングエリアに控えているファイルをローカルリポジトリへ移動　※変更にメッセージをつけて記録
・git rm　→ ファイルの削除
・git status　→ Gitリポジトリの状況を表示する
・git log　（jで下がるkで上がるqでquit）
　git log -p ：ファイルの差分を表示する
　git log -n ●数字●：最新のコミットn番目までを表示
　git log --oneline：1行で表示
　git log --oneline -p [ファイル名]
　git log --oneline -n ●数字●
・git diff
・git remote add origin ●GitHub上のリモートリポジトリのURL●　→ リモートリポジトリ(GitHub)を登録
    remote add → リモートリポジトリ(GitHub)へ追加するよ！
    orrigin → リモートリポジトリ(GitHub)の事　※変数みたいな書き方　これ以降はリモートリポジトリのことを「origin」として呼称することができる(エイリアス)
・git push origin master[main]　→ ローカルリポジトリの内容をリモートリポジトリ(GitHub)へ送信する
